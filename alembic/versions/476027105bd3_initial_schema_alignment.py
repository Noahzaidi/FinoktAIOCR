"""Initial schema alignment

Revision ID: 476027105bd3
Revises: 
Create Date: 2025-10-14 20:55:01.311387

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '476027105bd3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'training_samples', type_='foreignkey')
    op.create_foreign_key(op.f('training_samples_word_id_fkey'), 'training_samples', 'words', ['word_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_templates_document_type'), table_name='templates')
    op.create_unique_constraint(op.f('templates_document_type_key'), 'templates', ['document_type'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_templates_document_type'), 'templates', ['document_type'], unique=False)
    op.drop_index(op.f('ix_lexicons_misspelled'), table_name='lexicons')
    op.create_unique_constraint(op.f('lexicons_misspelled_key'), 'lexicons', ['misspelled'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_lexicons_misspelled'), 'lexicons', ['misspelled'], unique=False)
    op.add_column('documents', sa.Column('original_filename', sa.TEXT(), autoincrement=False, nullable=True))
    op.alter_column('documents', 'processing_error',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('documents', 'storage_path',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_index(op.f('ix_document_types_name'), table_name='document_types')
    op.create_index(op.f('idx_document_types_name'), 'document_types', ['name'], unique=False)
    op.create_unique_constraint(op.f('document_types_name_key'), 'document_types', ['name'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_applied_corrections_word_id'), 'applied_corrections', ['word_id'], unique=False)
    op.alter_column('applied_corrections', 'applied_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('applied_corrections', 'correction_source',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.alter_column('applied_corrections', 'corrected_text',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('applied_corrections', 'original_text',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.alter_column('applied_corrections', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.create_table('extracted_fields',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('field_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('field_value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name=op.f('extracted_fields_document_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('extracted_fields_pkey'))
    )
    op.create_table('corrections',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('word_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('original_text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('corrected_text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('context', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name=op.f('corrections_document_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['word_id'], ['words.id'], name=op.f('corrections_word_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('corrections_pkey'))
    )
    # ### end Alembic commands ###
